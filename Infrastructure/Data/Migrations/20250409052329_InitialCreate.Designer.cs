// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using R2ETien.EFCore.Infrastructure.Data;

#nullable disable

namespace R2ETien.EFCore.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250409052329_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c9cf760-db1b-4014-888b-1a3a768e3f43"),
                            Name = "HR"
                        },
                        new
                        {
                            Id = new Guid("3555b647-ab77-49a9-8800-3acf50b01737"),
                            Name = "IT"
                        },
                        new
                        {
                            Id = new Guid("e9f05c98-f19c-40e9-97a2-099dc63fcfb0"),
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Name", "DepartmentId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23716b2f-115d-4a99-ae32-2e34d18f30b6"),
                            DepartmentId = new Guid("7c9cf760-db1b-4014-888b-1a3a768e3f43"),
                            JoinedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alice"
                        },
                        new
                        {
                            Id = new Guid("8db1e41b-e756-4b85-a26f-7d1162f34346"),
                            DepartmentId = new Guid("3555b647-ab77-49a9-8800-3acf50b01737"),
                            JoinedDate = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bob"
                        },
                        new
                        {
                            Id = new Guid("97dfa0ee-d1c5-4b54-b9bb-77e737725429"),
                            DepartmentId = new Guid("e9f05c98-f19c-40e9-97a2-099dc63fcfb0"),
                            JoinedDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Charlie"
                        });
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36bb2475-a10b-445c-9735-16e399dfaacb"),
                            Name = "Apollo"
                        },
                        new
                        {
                            Id = new Guid("4d6b8dde-ff43-4e7f-84c5-409da7d9d0f1"),
                            Name = "Hermes"
                        });
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.ProjectEmployee", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("36bb2475-a10b-445c-9735-16e399dfaacb"),
                            EmployeeId = new Guid("23716b2f-115d-4a99-ae32-2e34d18f30b6"),
                            Enable = true
                        },
                        new
                        {
                            ProjectId = new Guid("36bb2475-a10b-445c-9735-16e399dfaacb"),
                            EmployeeId = new Guid("8db1e41b-e756-4b85-a26f-7d1162f34346"),
                            Enable = true
                        },
                        new
                        {
                            ProjectId = new Guid("4d6b8dde-ff43-4e7f-84c5-409da7d9d0f1"),
                            EmployeeId = new Guid("97dfa0ee-d1c5-4b54-b9bb-77e737725429"),
                            Enable = true
                        });
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28546848-9293-435d-bab4-57fff8ac666c"),
                            Amount = 5000m,
                            EmployeeId = new Guid("23716b2f-115d-4a99-ae32-2e34d18f30b6")
                        },
                        new
                        {
                            Id = new Guid("eed9fc38-ac26-4bc2-b997-c0877b6b8398"),
                            Amount = 6000m,
                            EmployeeId = new Guid("8db1e41b-e756-4b85-a26f-7d1162f34346")
                        },
                        new
                        {
                            Id = new Guid("c2a53dff-c0c6-4686-9cbb-448d896398ee"),
                            Amount = 5500m,
                            EmployeeId = new Guid("97dfa0ee-d1c5-4b54-b9bb-77e737725429")
                        });
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Employee", b =>
                {
                    b.HasOne("R2ETien.EFCore.Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.ProjectEmployee", b =>
                {
                    b.HasOne("R2ETien.EFCore.Domain.Entities.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("R2ETien.EFCore.Domain.Entities.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Salary", b =>
                {
                    b.HasOne("R2ETien.EFCore.Domain.Entities.Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("R2ETien.EFCore.Domain.Entities.Salary", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("R2ETien.EFCore.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
